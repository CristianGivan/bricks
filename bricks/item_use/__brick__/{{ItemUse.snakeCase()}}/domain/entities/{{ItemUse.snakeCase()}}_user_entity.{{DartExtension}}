import 'package:fo_fe/core/core_exports.dart';
import 'package:fo_fe/features/organizer/utils/organizer_exports.dart';

class {{ItemUse.pascalCase()}}UserLinkEntity extends UserLinkEntity {
  final int {{ItemUse.camelCase()}}Id;
  final int userId;
  final DateTime linkingDate;
  final bool isSelectedByUser;
  final int orderedByUser;

  {{ItemUse.pascalCase()}}UserLinkEntity({
    int? id,
    int? {{ItemUse.camelCase()}}Id,
    int? userId,
    DateTime? linkingDate,
    bool? selectedByUser,
    int? orderedByUser,
  })  : {{ItemUse.camelCase()}}Id = {{ItemUse.camelCase()}}Id ?? 0,
        userId = userId ?? 0,
        linkingDate = linkingDate ?? INITIAL_EPOCH_DATE,
        isSelectedByUser = selectedByUser ?? false,
        orderedByUser = orderedByUser ?? 0,
        super(id: id ?? 0, remoteId: 0, isSelected: selectedByUser ?? false);

  static final {{ItemUse.pascalCase()}}UserLinkEntity _emptyInstance = {{ItemUse.pascalCase()}}UserLinkEntity();

  factory {{ItemUse.pascalCase()}}UserLinkEntity.empty() => _emptyInstance;

  @override
  bool get isEmpty => identical(this, _emptyInstance);

  @override
  List<Object?> get props => [
        id,
        linkingDate,
        {{ItemUse.camelCase()}}Id,
        userId,
        isSelectedByUser,
        orderedByUser,
      ];

  {{ItemUse.pascalCase()}}UserLinkEntity copyWith({
    int? id,
    DateTime? linkingDate,
    int? {{ItemUse.camelCase()}}Id,
    int? userId,
    bool? isSelectedByUser,
    int? orderedByUser,
  }) {
    return {{ItemUse.pascalCase()}}UserLinkEntity(
      id: id ?? this.id,
      linkingDate: linkingDate ?? this.linkingDate,
      {{ItemUse.camelCase()}}Id: {{ItemUse.camelCase()}}Id ?? this.{{ItemUse.camelCase()}}Id,
      userId: userId ?? this.userId,
      selectedByUser: isSelectedByUser ?? this.isSelectedByUser,
      orderedByUser: orderedByUser ?? this.orderedByUser,
    );
  }
}
