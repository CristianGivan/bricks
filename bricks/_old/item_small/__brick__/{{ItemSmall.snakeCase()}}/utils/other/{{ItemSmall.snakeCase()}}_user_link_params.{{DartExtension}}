import 'package:fo_fe/features/organizer/all_items/{{ItemSmall.snakeCase()}}/utils/{{ItemSmall.snakeCase()}}_exports.dart';
import 'package:fo_fe/features/organizer/all_items/user/utils/user_exports.dart';
import 'package:fo_fe/features/organizer/utils/organizer_exports.dart';

class {{ItemSmall.pascalCase()}}UserLinkParams extends ItemLinkParams {
  const {{ItemSmall.pascalCase()}}UserLinkParams({
    required int id,
    required int forUserId,
    IdSet? idSet,
  }) : super(
          itemId: id,
          userId: forUserId,
          itemType: ItemsTypeEnum.{{ItemSmall.camelCase()}}User,
          pushUpdateRoute: {{ItemSmall.pascalCase()}}RouterNames.{{ItemSmall.camelCase()}}UpdateUserRouteName,
          pushCreateLinkItemRoute: UserRouterNames.userAddRouteName,
        );

  @override
  copyWith({
    int? itemId,
    int? userId,
    ItemsTypeEnum? itemType,
    OrganizerLinkBloc<ItemEntity>? organizerLinkBloc,
    String? pushUpdateRoute,
    String? pushCreateLinkItemRoute,
  }) {
    return {{ItemSmall.pascalCase()}}UserLinkParams(
      id: itemId ?? this.itemId,
      forUserId: userId ?? this.userId,
    );
  }
}