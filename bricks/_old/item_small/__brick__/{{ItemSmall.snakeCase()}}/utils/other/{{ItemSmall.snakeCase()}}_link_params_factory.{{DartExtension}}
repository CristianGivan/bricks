import 'package:fo_fe/features/organizer/all_items/{{ItemSmall.snakeCase()}}/utils/{{ItemSmall.snakeCase()}}_exports.dart';
import 'package:fo_fe/features/organizer/all_items/user/utils/user_exports.dart';
import 'package:fo_fe/features/organizer/utils/organizer_exports.dart';

typedef Create{{ItemSmall.pascalCase()}}LinkParams = ItemLinkParams Function(int id, int forUserId);

class {{ItemSmall.pascalCase()}}LinkParamsFactory {
  static final Map<Type, Create{{ItemSmall.pascalCase()}}LinkParams> _typeToParams = {
    UserEntity: (id, userId) => {{ItemSmall.pascalCase()}}UserLinkParams(id: id, forUserId: userId),
  };

  static ItemLinkParams create<T extends ItemEntity>({required int id, required int forUserId}) {
    final create{{ItemSmall.pascalCase()}}LinkParams = _typeToParams[T];
    if (create{{ItemSmall.pascalCase()}}LinkParams == null) {
      throw Exception('The type $T is not supported in {{ItemSmall.pascalCase()}}LinkParamsFactory');
    }
    return create{{ItemSmall.pascalCase()}}LinkParams(id, forUserId);
  }
}