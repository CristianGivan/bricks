import 'package:fo_fe/core/external_exports.dart';
import 'package:fo_fe/core/external_presentation_exports.dart';
import 'package:fo_fe/features/organizer/all_items/{{ItemSmall.snakeCase()}}/utils/{{ItemSmall.snakeCase()}}_exports.dart';
import 'package:fo_fe/features/organizer/utils/organizer_exports.dart';

class {{ItemSmall.pascalCase()}}Card extends StatelessWidget {
  final {{ItemSmall.pascalCase()}}Entity itemEntity;

  const {{ItemSmall.pascalCase()}}Card(
    this.itemEntity, {
    super.key,
  });

  @override
  Widget build(BuildContext context) {
    return ItemCardContainer(
      onTap: () => _handleTap(context),
      onLongPress: () => _handleLongPress(context),
      onConfirmDismiss: (direction, context) => _handleConfirmDismiss(direction, context),
      child: _buildCard(context),
    );
  }

  void _handleTap(BuildContext context) {
    context.pushNamed({{ItemSmall.pascalCase()}}RouterNames.{{ItemSmall.camelCase()}}ViewRouteName, extra: itemEntity.id);
  }

  void _handleLongPress(BuildContext context) {
    context.pushNamed({{ItemSmall.pascalCase()}}RouterNames.{{ItemSmall.camelCase()}}UpdateRouteName, extra: itemEntity.id);
  }

  Future<bool> _handleConfirmDismiss(DismissDirection direction, BuildContext context) async {
    return true;
  }

  Widget _buildCard(BuildContext context) {
    return Card(
      margin: const EdgeInsets.symmetric(vertical: 8.0, horizontal: 16.0),
      elevation: 4.0,
      child: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            _build{{ItemSmall.pascalCase()}}Name(),
            _buildDeleteButton(context),
          ],
        ),
      ),
    );
  }

  Widget _build{{ItemSmall.pascalCase()}}Name() {
    return Text(
      itemEntity.subject,
      style: const TextStyle(
        fontSize: 18,
        fontWeight: FontWeight.bold,
      ),
    );
  }

  Widget _buildDeleteButton(BuildContext context) {
    return IconButton(
      icon: const Icon(Icons.delete, color: Colors.red),
      onPressed: () => context.pop(),
    );
  }
}
