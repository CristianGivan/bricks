part of '{{ItemSmall.snakeCase()}}_bloc.dart';

class {{ItemSmall.pascalCase()}}UpdateBlocEvent<P> extends OrganizerBlocEvent {
  final P params;

  const {{ItemSmall.pascalCase()}}UpdateBlocEvent(this.params);

  @override
  List<Object> get props => [params as Object];
}

class {{ItemSmall.pascalCase()}}ItemsSortBlocEvent<P> extends OrganizerBlocEvent {
  final P sortParams;

  const {{ItemSmall.pascalCase()}}ItemsSortBlocEvent({
    required this.sortParams,
  });

  @override
  List<Object> get props => [sortParams as Object];
}

class {{ItemSmall.pascalCase()}}ItemsFilterBlocEvent<P> extends OrganizerBlocEvent {
  final P filterParams;

  const {{ItemSmall.pascalCase()}}ItemsFilterBlocEvent({
    required this.filterParams,
  });

  @override
  List<Object> get props => [filterParams as Object];
}

class {{ItemSmall.pascalCase()}}ExportToExcelBlocEvent extends OrganizerBlocEvent {
  final {{ItemSmall.pascalCase()}}Params params;

  const {{ItemSmall.pascalCase()}}ExportToExcelBlocEvent(this.params);

  @override
  List<Object> get props => [params];
}
