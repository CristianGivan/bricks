import 'package:fo_fe/core/external_presentation_exports.dart';
import 'package:fo_fe/features/organizer/all_items/{{ItemSmall.snakeCase()}}/utils/{{ItemSmall.snakeCase()}}_exports.dart';
import 'package:fo_fe/features/organizer/utils/organizer_exports.dart';


class {{ItemSmall.pascalCase()}}AddScreenActionsMenu {
  static List<PopupMenuEntry> getMenuItems(BuildContext context, int userId) {
    return [
      PopupMenuItem(
        child: const Text('Save {{ItemSmall.pascalCase()}}'),
        onTap: () => onTap(context, userId),
      ),
      PopupMenuItem(
        child: const Text('Not Save'),
        onTap: () => context.pop(),
      ),
    ];
  }

  static void onTap(BuildContext context, int userId) {
    final {{ItemSmall.camelCase()}}FormCubit = context.read<{{ItemSmall.pascalCase()}}FormCubit>();
    final {{ItemSmall.camelCase()}}FormState = {{ItemSmall.camelCase()}}FormCubit.state;

    final {{ItemSmall.camelCase()}} = {{ItemSmall.pascalCase()}}Entity(
      id: 0,
      subject: {{ItemSmall.camelCase()}}FormState.subject,
      createdDate: DateTime.now(),
      creatorId: userId,
    );

    final AddItemParams addItemParams = AddItemParams(
      item: {{ItemSmall.camelCase()}},
    );

    BlocProvider.of<{{ItemSmall.pascalCase()}}Bloc>(context).add(AddItemBlocEvent(addItemParams));
    context.pop();
  }
}
